# Generated by Django 4.2.13 on 2024-05-26 08:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ObesityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=6)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('bmi', models.FloatField()),
                ('activityLevel', models.FloatField()),
                ('ObesityCategory', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('height', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='userHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(max_length=120)),
                ('symptoms', models.CharField(max_length=500)),
                ('result', models.CharField(max_length=120)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_file', models.FileField(upload_to='receipts/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='pcosDisorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_frequency', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('gained_weight', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('body_hair_growth', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('skin_dark', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('hair_problem', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('pimples', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('fast_food', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('exercise', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('mood_swing', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('mentrual_regularity', models.BooleanField(choices=[(1, 'YES'), (0, 'NO')], max_length=10)),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('blood_grp', models.CharField(choices=[('11', 'A+'), ('12', 'A-'), ('13', 'B+'), ('14', 'B-'), ('15', 'O+'), ('16', 'O-'), ('17', 'AB+'), ('18', 'AB-')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='obesityDisorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activityLevel', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='mentalDisorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sadness', models.CharField(choices=[('Usually', 'Usually'), ('Sometimes', 'Sometimes'), ('Seldom', 'Seldom'), ('Most-Often', 'Most-Often')], max_length=100)),
                ('euphoric', models.CharField(choices=[('Seldom', 'Seldom'), ('Most-Often', 'Most-Often'), ('Usually', 'Usually'), ('Sometimes', 'Sometimes')], max_length=100)),
                ('exhausted', models.CharField(choices=[('Sometimes', 'Sometimes'), ('Usually', 'Usually'), ('Seldom', 'Seldom'), ('Most-Often', 'Most-Often')], max_length=100)),
                ('sleep_disorder', models.CharField(choices=[('Sometimes', 'Sometimes'), ('Most-Often', 'Most-Often'), ('Usually', 'Usually'), ('Seldom', 'Seldom')], max_length=100)),
                ('mood_swing', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('suicidal_thoughts', models.CharField(choices=[('YES ', 'YES '), ('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('anorxia', models.CharField(choices=[('NO', 'NO'), ('YES', 'YES')], max_length=100)),
                ('authority_respect', models.CharField(choices=[('NO', 'NO'), ('YES', 'YES')], max_length=100)),
                ('try_explanation', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('aggressive_response', models.CharField(choices=[('NO', 'NO'), ('YES', 'YES')], max_length=100)),
                ('ignore_moveon', models.CharField(choices=[('NO', 'NO'), ('YES', 'YES')], max_length=100)),
                ('nervous_breakdown', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('admit_mistakes', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('overthink', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=100)),
                ('sexual_activity', models.CharField(choices=[('3 From 10', '3 From 10'), ('4 From 10', '4 From 10'), ('6 From 10', '6 From 10'), ('5 From 10', '5 From 10'), ('7 From 10', '7 From 10'), ('8 From 10', '8 From 10'), ('9 From 10', '9 From 10'), ('2 From 10', '2 From 10'), ('1 From 10', '1 From 10')], max_length=100)),
                ('concentration', models.CharField(choices=[('3 From 10', '3 From 10'), ('2 From 10', '2 From 10'), ('5 From 10', '5 From 10'), ('4 From 10', '4 From 10'), ('7 From 10', '7 From 10'), ('6 From 10', '6 From 10'), ('1 From 10', '1 From 10'), ('8 From 10', '8 From 10')], max_length=100)),
                ('optimisim', models.CharField(choices=[('4 From 10', '4 From 10'), ('5 From 10', '5 From 10'), ('7 From 10', '7 From 10'), ('2 From 10', '2 From 10'), ('6 From 10', '6 From 10'), ('9 From 10', '9 From 10'), ('3 From 10', '3 From 10'), ('8 From 10', '8 From 10'), ('1 From 10', '1 From 10')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=20)),
                ('specialization', models.CharField(max_length=100)),
                ('hospital', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('about', models.CharField(max_length=1000)),
                ('education', models.CharField(max_length=1000)),
                ('experience', models.CharField(max_length=1000)),
                ('languages', models.CharField(max_length=1000)),
                ('expertise', models.CharField(max_length=1000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='doctor_users', related_query_name='doctor_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='doctor_users', related_query_name='doctor_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'doctor_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=20)),
                ('appointmentDate', models.DateTimeField()),
                ('message', models.CharField(max_length=1000)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.doctoruser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
